/**
 * Scheme colors
 * ----------------------------------------------
 * defining color schemes that can reuse coloring
 * for each component. priority color goes to
 * background, contrast color to the text.
 */

 // primary
.scheme-primary {
  &:not(.inverse) {
    .scheme(@primary-scheme);

    &.interactive {
      .scheme-interactive(@primary-scheme, both, both);
    }
  }

  &.inverse {
    .scheme(@primary-scheme-inverse);

    &.interactive {
      .scheme-interactive(@primary-scheme-inverse, both, both);
    }
  }
}

// secondary
.scheme-secondary {
  &:not(.inverse) {
    .scheme(@secondary-scheme);

    &.interactive {
      .scheme-interactive(@secondary-scheme, both, both);
    }
  }

  &.inverse {
    .scheme(@secondary-scheme-inverse);

    &.interactive {
      .scheme-interactive(@secondary-scheme-inverse, both, both);
    }
  }
}

// tertiary
.scheme-tertiary {
  &:not(.inverse) {
    .scheme(@tertiary-scheme);

    &.interactive {
      .scheme-interactive(@tertiary-scheme, both, both);
    }
  }

  &.inverse {
    .scheme(@tertiary-scheme-inverse);

    &.interactive {
      .scheme-interactive(@tertiary-scheme-inverse, both, both);
    }
  }
}

// quaternary
.scheme-quaternary {
  &:not(.inverse) {
    .scheme(@quaternary-scheme);

    &.interactive {
      .scheme-interactive(@quaternary-scheme, both, both);
    }
  }

  &.inverse {
    .scheme(@quaternary-scheme-inverse);

    &.interactive {
      .scheme-interactive(@quaternary-scheme-inverse, both, both);
    }
  }
}

// quinary
.scheme-quinary {
  &:not(.inverse) {
    .scheme(@quinary-scheme);

    &.interactive {
      .scheme-interactive(@quinary-scheme, both, both);
    }
  }

  &.inverse {
    .scheme(@quinary-scheme-inverse);

    &.interactive {
      .scheme-interactive(@quinary-scheme-inverse, both, both);
    }
  }
}

// graydark
.scheme-graydark {
  &:not(.inverse) {
    .scheme(@graydark-scheme);

    &.interactive {
      .scheme-interactive(@graydark-scheme, both, both);
    }
  }

  &.inverse {
    .scheme(@graydark-scheme-inverse);

    &.interactive {
      .scheme-interactive(@graydark-scheme-inverse, both, both);
    }
  }
}

// graylight
.scheme-graylight {
  &:not(.inverse) {
    .scheme(@graylight-scheme);

    &.interactive {
      .scheme-interactive(@graylight-scheme, both, both);
    }
  }

  &.inverse {
    .scheme(@graylight-scheme-inverse);

    &.interactive {
      .scheme-interactive(@graylight-scheme-inverse, both, both);
    }
  }
}

// blackwhite
.scheme-blackwhite {
  &:not(.inverse) {
    .scheme(@blackwhite-scheme);

    &.interactive {
      .scheme-interactive(@blackwhite-scheme, both, both);
    }
  }

  &.inverse {
    .scheme(@blackwhite-scheme-inverse);

    &.interactive {
      .scheme-interactive(@blackwhite-scheme-inverse, both, both);
    }
  }
}